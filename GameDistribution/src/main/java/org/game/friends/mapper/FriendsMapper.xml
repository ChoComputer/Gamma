<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.rg/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.game.friends.mapper.FriendsMapper">
	<insert id="insertFriend">
		<selectKey keyProperty="fnum" resultType="Long" order="BEFORE">
			SELECT friends_num.nextval FROM DUAL
		</selectKey>
		INSERT INTO friends VALUES (#{fnum}, #{follower}, #{following})
	</insert>

	<!-- 검색 기능 구현시, 이메일과 닉네임 전부 검색이 가능하도록 작성
		 user 테이블과 friends 테이블을 join
		 SELECT nick_name FROM join_user u LEFT OUTER JOIN friends f ON (u.email = f.follower)
	-->
	<!-- 작성하고자 하는 쿼리문 
		 follower와 following 목록을 불러옴
		 조건1. 로그인 계정을 기준으로 follower/following 을 불러와야함
		 조건2. 키워드 검색을 해야하는데, 이메일과 닉네임 둘 다 검색 가능해야함 - 닉네임 검색을 하려면 join 사용 
		 WHERE email LIKE '%'||#{keyword}||'%'
	-->
	<select id="getFollower" resultType="org.game.friends.domain.FriendsVO">
		SELECT distinct u.email FROM friends f FULL OUTER JOIN join_user u ON (f.follower = u.email) WHERE u.nick_name LIKE '%'||#{keyword}||'%' OR f.follower LIKE '%'||#{keyword}||'%';
	</select>
<!-- 다시 -->
	<select id="getFollowing" resultType="org.game.friends.domain.FriendsVO">
		SELECT * FROM friends 
		WHERE follower LIKE '%'||#{keyword}||'%' 
		OR nick_name = (SELECT nick_name FROM join_user u LEFT OUTER JOIN friends f ON (u.email = f.follower)) LIKE '%'||#{keyword}||'%'
		ORDER BY fnum ASC
	</select>
	
	<delete id="deleteFriend">
		DELETE FROM friends WHERE follower = #{follower}
	</delete>
</mapper>












