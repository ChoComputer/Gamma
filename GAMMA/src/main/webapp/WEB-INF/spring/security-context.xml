<?xml version="1.0" encoding="UTF-8"?>
<!-- 재인 추가 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<bean id="customAccessDenied" class="org.game.user.security.CustomAccessDeniedHandler" />
	<bean id="customLoginSuccess" class="org.game.user.security.CustomLoginSuccessHandler" />
	<bean id="bycryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<bean id="customUserDetailService" class="org.game.user.security.CustomUserDetailService" />
	
	<security:http>
		<security:intercept-url pattern="/user/all" access="permitAll" />
		<!-- 
		<security:intercept-url pattern="/user/member" access="hasRole('ROLE_MEMBER')" />
		<security:intercept-url pattern="/user/admin" access="hasRole('ROLE_ADMIN')" /> 
		-->
		<security:form-login login-page="/user/userLogin " authentication-success-handler-ref="customLoginSuccess"/>
		<!-- 접근 제한 페이지 -->
		<security:access-denied-handler ref="customAccessDenied" />
		<security:logout logout-url="/user/userLogout" invalidate-session="true" delete-cookies="remember-me,JSESSIONID"/>
		<!-- 7일 자동로그인 -->
		<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800"/>
	</security:http>
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailService">
		<!-- 	<security:jdbc-user-service data-source-ref="dataSource" />  -->
			<security:password-encoder ref="bycryptPasswordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>

<!-- 
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
		커스텀 클래스 빈 저장
	<bean id="customAccessDenied" class="org.game.user.security.CustomAccessDeniedHandler" />
	 <bean id="customLoginSuccess" class="org.game.user.security.CustomLoginSuccessHandler" />
		<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	 	 <security:http>
		
		/secu/all 접속시 가로채서 검사하도록 처리
		<security:intercept-url pattern="/secu/all" access="permitAll"/>
		
		/secu/member는 MEMBER에게만 허용
		<security:intercept-url pattern="/secu/member" access="hasRole('ROLE_MEMBER')"/> 
	
		/secu/admin는 ADMIN에게만 허용
		<security:intercept-url pattern="/secu/admin" access="hasRole('ROLE_ADMIN')"/> 
	
		<security:form-login login-page="/user/userLogin" 
			authentication-success-handler-ref="customLoginSuccess" />
		
		<security:access-denied-handler error-page="/accessError"/>
		<security:access-denied-handler ref="customAccessDenied"/>
	
		<security:logout logout-url="/user/userLogout" invalidate-session="true"/>
	
	</security:http>
	
	인증영역
	<security:authentication-manager>
	
		<security:authentication-provider>
			<security:user-service>
				<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
				<security:user name="admin" password="{noop}admin" authorities="ROLE_MEMBER,ROLE_ADMIN"/>
			</security:user-service>
			<security:jdbc-user-service data-source-ref="dataSource"/>
			<security:password-encoder ref="bcryptPasswordEncoder"/>
		</security:authentication-provider>
	
	</security:authentication-manager>
	 -->
</beans>