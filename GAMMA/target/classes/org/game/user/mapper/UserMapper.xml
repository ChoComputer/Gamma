<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.game.user.mapper.UserMapper">
<!-- <resultMap type="org.game.user.domain.ConsumerVO" id="memberMap">
	<id property="cunm" column="cnum"/>
	<result property="cid" column="cid"/>
	<result property="password" column="password"/>
	<result property="email" column="email"/>
	<result property="nickname" column="nickname"/>
	<result property="cadmin" column="cadmin"/>
	<result property="userregdate" column="userregdate"/>
	<result property="userupdatedate" column="userupdatedate"/>
	<collection property="authList" resultMap="authMap">
	</collection>
</resultMap> --> 

	<!--  유저정보 상세조회 -->
	<select id="userGet" resultType="org.game.user.domain.ConsumerVO">
		SELECT * FROM consumer WHERE cid=#{cid}
	</select>
	
	<select id="userPro" resultType="org.game.user.domain.ConsumerVO">
		SELECT * FROM consumer WHERE cid=#{cid}
	</select>
	
	<!-- 아이디 중복체크 -->
	<select id="idChk" resultType="long">
	
		SELECT count(*) FROM consumer WHERE cid=#{cid}
		
	</select>
	<!-- 비밀번호 변경 -->
<update id="updatePw" >
	update consumer set password = #{password} where cid = #{cid}
</update>
	
	<!-- email 중복체크 -->
	<select id="emailChk" resultType="long">
	
		SELECT count(*) FROM consumer WHERE email=#{email}
		
	</select>

	<!-- 패스워드 체크 -->
	<select id="passChk" resultType="int">
		
		SELECT COUNT(*) FROM consumer WHERE cid=#{cid} AND password=#{password}
		
	</select>

	<!-- 회원가입 -->
	<!-- <insert id="userJoin">
		INSERT INTO consumer (cnum, cid, email, password,
		nickname)
		VALUES(consumer_num.nextval,#{cid},#{email},#{password},#{nickname})
	</insert>
	 -->
	
	
	<!-- 로그인 -->
	<!-- <select id="userLogin" resultType="org.game.user.domain.ConsumerVO">
		SELECT *
		FROM consumer
		WHERE cid = #{cid}

	</select>
	 -->
	<!-- 회원정보 수정 -->
	<update id="userModify">
		UPDATE consumer
		SET
		password=#{password}, email=#{email},nickname=#{nickname} WHERE cid=#{cid}
	</update>
	
	<delete id="authDelete">
		DELETE FROM consumer_auth
		WHERE cid=#{cid} 
	</delete>
	<!-- 회원탈퇴 -->
	<delete id="userDelete">
		DELETE FROM consumer
		WHERE cid=#{cid} 
	</delete>
	
	<!-- 재인 추가 -->
	<resultMap type="org.game.user.domain.ConsumerVO" id="consumerMap">
		<id property="cid" column="cid" />
		<result property="cnum" column="cnum" />
		<result property="cid" column="cid" />
		<result property="email" column="email" />
		<result property="password" column="password" />
		<result property="nickname" column="nickname" />
		<result property="cadmin" column="cadmin" />
		<result property="user_key" column="user_key" />
		<result property="userregdate" column="userregdate" />
		<result property="userupdatedate" column="userupdatedate" />
		<collection property="authList" resultMap="authMap"></collection>		
	</resultMap>
	
	<resultMap type="org.game.user.domain.AuthVO" id="authMap">
		<result property="cid" column="cid" />
		<result property="auth" column="auth" />
	</resultMap>
	
	<select id="read" resultMap="consumerMap">
		SELECT c.cnum, c.cid, c.email, c.password, c.nickname, c.cadmin, c.userregdate, c.userupdatedate, a.auth
		FROM
		consumer c LEFT OUTER JOIN consumer_auth a ON c.cid = a.cid
		WHERE c.cid = #{cid}
	</select>
	
	<insert id="insertConsumer">
		INSERT INTO consumer(cnum, cid, email, password, nickname)
		VALUES
		(consumer_num.nextval, #{cid}, #{email}, #{password}, #{nickname})
	</insert>
	
	<!-- 다중 insert문 update로 처리 -->
	<update id="insertConsumerAuth">
		INSERT ALL
		<foreach collection="authList" item="item" separator=" ">
			INTO consumer_auth(cid, auth)
			VALUES
			(#{item.cid}, #{item.auth})
		</foreach>
		SELECT * FROM DUAL
	</update>
</mapper>








